services:
  rabbitmq:
    image: rabbitmq
    ports:
      - 5672:5672

  auth:
    build: 
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    depends_on:
      - rabbitmq
      - mysql
      - redis
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000

  notifications:
    build: 
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    command: npm run start:dev notifications
    env_file:
      - ./apps/notifications/.env
    depends_on:
      - rabbitmq
      - mongodb
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3001:3000

  todo:
    build: 
      context: .
      dockerfile: ./apps/todo/Dockerfile
      target: development
    command: npm run start:dev todo
    env_file:
      - ./apps/todo/.env
    depends_on:
      - rabbitmq
      - mysql
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3002:3000

  mysql:
    image: mysql
    env_file:
      - ./apps/auth/.env
    entrypoint:
      sh -c "
        echo 'CREATE DATABASE IF NOT EXISTS users; CREATE DATABASE IF NOT EXISTS todos;' > /docker-entrypoint-initdb.d/init.sql;
        /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
    ports:
      - 3306:3306

  redis:
    image: redis:latest
    env_file:
      - ./apps/auth/.env
    ports:
      - 6379:6379

  mongodb:
    image: mongo:latest
    volumes:
      - 'mongodb_master_data:/bitnami/mongodb'
    ports:
      - 27017:27017

volumes:
  mongodb_master_data:
    driver: local